<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 패스워드 단방향 암호화 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- 로그인정보비교 service -->
	<bean id="CustomUserDetailsService" class="org.project01.security.CustomUserDetailsService" />
	<bean id="UserLoginAuthenticationProvider" class="org.project01.security.UserLoginAuthProvider" />
	<!-- 로그인 실패시 -->
	<bean id="userLoginFailHandler" class="org.project01.security.UserLoginFailHandler" />
	<!-- 로그인 성공시 -->
	<bean id="userLoginSuccessHandler" class="org.project01.security.UserLoginSuccessHandler" />
	<!-- 접근권한이 없거나 로그인 후 뒤로가기시 -->
	<bean id="userDeniedHandler" class="org.project01.security.UserDeniedHandler" />

	<security:http>
		<!-- 정적 리소스는 모두 접근 허용 -->
		<security:intercept-url pattern="/" access="permitAll" />
		<!-- 글쓰기,수정,삭제는 회원 가능 -->
		<security:intercept-url pattern="/cmu/register**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')" />
		<security:intercept-url pattern="/cmu/modify**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')" />
		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<security:intercept-url pattern="/member/login" access="isAnonymous()" />
		<security:intercept-url pattern="/member/join" access="isAnonymous()" />
		<!-- 마이페이지:유저만 입장가능 -->
		<security:intercept-url pattern="/member/my**" access="hasRole('ROLE_MEMBER')" />
		<!-- 관리자페이지는 관리자만 접근 허용 -->
		<security:intercept-url pattern="/manage/**" access="hasRole('ROLE_ADMIN')" />

		<!-- 로그인:  로그인 인증, 성공, 실패 처리 작업-->
		<security:form-login 
			login-page="/member/login"
			username-parameter="userId" password-parameter="userPw"
			login-processing-url="/member/login-processing"
			authentication-failure-handler-ref="userLoginFailHandler"
			authentication-success-handler-ref="userLoginSuccessHandler"
			always-use-default-target="true" />
		<!-- 로그아웃: 로그아웃 성공, 쿠키 삭제 작업-->
 		<security:logout logout-url="/member/logout"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="remember-me,JSESSIONID" />
		<!-- 자동 로그인: remember-me 쿠키 브라우저에 저장, persistent_logins DB에 저장, 유효 기간: 7일 -->
		<!-- 사이트 재방문시 서버가 쿠키에 해당 정보를 DB에서 불러오면서 인증 유지 -->	
		<security:remember-me remember-me-parameter="remember-me"  remember-me-cookie="remember-me" data-source-ref="dataSource" 
   			 authentication-success-handler-ref="userLoginSuccessHandler"  token-validity-seconds="604800" />

		<!-- 권한이 없어서 금지된 URI 접속할 때 보여줄 페이지(error-page="/"403 에러 페이지 대체) -->
		<security:access-denied-handler ref="userDeniedHandler"/>
		<security:csrf disabled="true" />
		<!-- 중복로그인방지 -->
		<!-- - invalid-session-url="/login" : 세션이 끊겼을때 이동 할 페이지 입니다.- max-sessions="1" : 최대 허용 가능 중복 세션 수 입니다.
		- expired-url="/login" :  중복 로그인이 일어났을 경우 이동 할 페이지 입니다.-->
		<security:session-management invalid-session-url="/">
			<security:concurrency-control max-sessions="1" expired-url="/member/login" />
		</security:session-management>			
	</security:http>
	
	<!-- DB연동 커스터마이징  Bean -->
	<security:authentication-manager>
		<security:authentication-provider ref="UserLoginAuthenticationProvider" />
		<security:authentication-provider user-service-ref="CustomUserDetailsService">
		<!--패스워드 단방향 암호화  -->
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

 	<!-- <bean id="jdbcTokenRepositoryImpl" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"></bean> -->
<!-- 	<bean id="persistentTokenBasederMeServices" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
 	<bean id="persistentTokenBasedRememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<constructor-arg name="key" value="uniqueAndSecret" />
		<constructor-arg name="userDetailsService" ref="userLoginDetailsService" />
		<constructor-arg name="tokenRepository" ref="jdbcTokenRepositoryImpl" />
		<property name="cookieName" value="HSWEB_U_REMEMBER" />
		<property name="parameter" value="remember-me" />
		<property name="tokenValiditySeconds" value="60000" />
	</bean -->

	<!-- mvc 인터셉터 정의 -->
	<!--  	 <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*" />
			로그인 안돼있으면 접근 가능한 경로는 아래에 적어야함.
			<mvc:exclude-mapping path="/login/**" />
			<mvc:exclude-mapping path="/add/**" />
			<ref bean="interceptorForExam" />
		</mvc:interceptor>
	</mvc:interceptors> -->
	<!-- <mvc:interceptors> <mvc:interceptor> 모든 URL 요청 mvc 인터셉터를 거치게 하도록 정의 
		<mvc:mapping path="/**/*" /> mvc 인터셉터를 거치지 않고 예외 시킬 URL 요청들 정의 <mvc:exclude-mapping 
		path="/member/list" /> <mvc:exclude-mapping path="/member/login" /> <mvc:exclude-mapping 
		path="/member/join" /> <mvc:exclude-mapping path="/member/register" /> mvc 
		인터셉터 컨트롤러 빈객체 정의 <bean class="org.project01.security.LogoutCheckInterceptor"></bean> 
		</mvc:interceptor> </mvc:interceptors> -->
	<!-- 컨트롤러로 요청이 가기전에 인터셉트 -->
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*" />
			<mvc:exclude-mapping path="/list/**" />
			<bean class="org.project01.security.LogoutCheckInterceptor" />
		</mvc:interceptor>
		아래 내용은 로그아웃후 뒤로가기버튼눌렀을때 다시 로그인 되는것을 방지하기 위함.
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<property name="cacheMappings">
				<props>
					아래 경로에만 뒤로가기 제한시킴.
					<prop key="/board/register">86400</prop>
				</props>
			</property>
		</bean>
	</mvc:interceptors> -->
</beans>