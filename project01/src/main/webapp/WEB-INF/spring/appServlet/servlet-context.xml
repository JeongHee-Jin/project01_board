<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		<!-- 스프링 모바일 -->
<!-- 	<annotation-driven>
		<argument-resolvers>
			 <beans:bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
			 <beans:bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
		</argument-resolvers>
	</annotation-driven> -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- mvc에서 jsp를 호출할 경로의 패턴 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 스프링 웹/ 모바일 구문해 mvc에서 jsp를 호출할 경로의 패턴 설정-->
<!-- 	<beans:bean class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
		  <beans:constructor-arg>
		  pc경로
			<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				<beans:property name="prefix" value="/WEB-INF/views/" />
				<beans:property name="suffix" value=".jsp" />
			</beans:bean>
		</beans:constructor-arg>
		모바일/ 태블릿 구분, 호출 중간에 m이 붙음
		<beans:property name="mobilePrefix" value="m." />
	  	<beans:property name="tabletPrefix" value="m." />
	  	<beans:property name="enableFallback" value="true"/>
	</beans:bean> -->

	<context:component-scan base-package="org.project01.controller" />
	<!-- <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" /> -->
	<beans:bean id="mutipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
<!-- 		<beans:property name="maxUploadSize" value="100000000" />
    	<beans:property name="maxInMemorySize" value="100000000" /> -->
	</beans:bean>			
	<!-- NaverLoginBO,KakaoLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="NaverAuthBO" class="org.project01.link.NaverAuthBO" />
	<beans:bean id="KakaoAuthBO" class="org.project01.link.KakaoAuthBO" />
	
	
	<!-- jasypt  -->
	<!-- dataSource property를 위한 PropertyPlaceholderConfigurer 설정 -->
<!-- 	<context:property-placeholder location="/WEB-INF/props/db.properties" />
	<beans:bean id="encryptorConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <beans:property name="algorithm" value="PBEWithMD5AndDES" />
        <beans:property name="password" value="" />
    </beans:bean>       
    <beans:bean id="encryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <beans:property name="config" ref="encryptorConfig" />
        <beans:property name="password" value="EASTGLOW_PASS" />
    </beans:bean>
    <beans:bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
        <beans:constructor-arg ref="encryptor" />
            <beans:property name="locations">
                <beans:list>
                    <beans:value>/WEB-INF/props/db.properties</beans:value>
      동일한 암호화키값으로 생성된 키값을저장한 다른 properties를 추가할 수 있습니다
                </beans:list>
            </beans:property>
    </beans:bean> -->

</beans:beans>

